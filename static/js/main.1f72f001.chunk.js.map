{"version":3,"sources":["api.ts","utils.ts","Routes/Tv.tsx","Routes/Home.tsx","Routes/Search.tsx","Components/Header.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_PATH","API_KEY","getMovies","fetch","then","response","json","getPopularMovies","getTopMovies","getOntheair","makeImagePath","id","format","Wrapper","styled","div","Banner","props","bgPhoto","BgInfo","BgInfo_title","h1","BgInfo_overview","p","Rowname","Slider","motion","Row","Box","Rowbox","RowButton","svg","Info","Overlay","BigCover","BigTitle","h3","theme","white","lighter","BigOverview","Biginfo","Bigdate","Bigruntime","Bigvote","rowVariants","hidden","x","window","outerWidth","visible","exit","boxVariants","normal","scale","hover","y","transition","delay","duaration","type","infoVariants","opacity","Tv","useQuery","onairtv","data","onairLoading","isLoading","console","log","useState","index","setIndex","rowHovered","setrowHovered","toggleRowHover","prev","history","useHistory","ClickedMatch","useRouteMatch","scrollY","useViewportScroll","clickedTv","params","TvId","results","find","backdrop_path","name","overview","onHoverStart","onHoverEnd","AnimatePresence","initial","variants","animate","duration","slice","map","onAir","whileHover","style","height","backgroundColor","display","alignItems","justifyContent","img","src","objectFit","onClick","push","focusable","role","xmlns","viewBox","fill","d","totalMovies","length","maxIndex","Math","floor","className","top","get","position","width","left","right","margin","backgroundImage","popularity","first_air_date","vote_average","Loader","Title","h2","Overview","RowBox","Bigrate","Bigproductor","CompayLogo","Home","theMovieId","useParams","bigMovieMatch","popularMovie","topMovie","rowHovered2","setrowHovered2","rowHovered3","setrowHovered3","toggleRowHover2","toggleRowHover3","index2","setIndex2","index3","setIndex3","onBoxOpen","movieId","clickedMovie","movie","clickedMovie2","clickedMovie3","getTheMovie","movieDetail","onOverlayClick","title","layoutId","adult","release_date","runtime","production_companies","company","logo_path","zIndex","Searchname","Search","location","useLocation","keyword","URLSearchParams","search","getSearchMovie","getSearchTv","tv","flexDirection","poster_path","marginBottom","original_title","tvshows","Nav","nav","Col","Logo","Items","ul","Item","li","darker","form","Input","input","Circle","start","pathLength","end","stroke","navVariants","scroll","Header","homeMatch","tvMatch","searchOpen","setSearchOpen","navAnimation","useAnimation","useEffect","onChange","useForm","register","handleSubmit","to","fillOpacity","path","isExact","onSubmit","reload","cursor","fillRule","clipRule","required","minLength","placeholder","scaleX","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","red","black","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.1f72f001.chunk.js","sourcesContent":["const BASE_PATH = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"4bc5f53a3e7b9a35ef5fbd55f9f2b964\";\r\n\r\ninterface IMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n  original_title: string;\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n  dates: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: IMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\nexport function getMovieImage(id: number) {\r\n  return fetch(`${BASE_PATH}movie/${id}/images?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\nexport function getMovies() {\r\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getPopularMovies() {\r\n  return fetch(`${BASE_PATH}/movie/popular?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\nexport function getTopMovies() {\r\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\nexport function getSearchMovie(keyword: string) {\r\n  return fetch(`\r\n  ${BASE_PATH}/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&page=1`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\nexport function getTheMovie(theMovieId: string) {\r\n  return fetch(`${BASE_PATH}/movie/${theMovieId}?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n\r\n//--------------------------movie-----------------\r\nexport interface IGetTvsResult {\r\n  page: number;\r\n  results: [\r\n    {\r\n      poster_path: string;\r\n      popularity: number;\r\n      id: number;\r\n      backdrop_path: string;\r\n      vote_average: number;\r\n      overview: string;\r\n      first_air_date: string;\r\n      name: string;\r\n    }\r\n  ];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\nexport function getOntheair() {\r\n  return fetch(`${BASE_PATH}/tv/on_the_air?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\nexport function getPopularTv() {\r\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport function getTopratedTv() {\r\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\nexport function getSearchTv(keyword: string) {\r\n  return fetch(`\r\n  ${BASE_PATH}/search/tv?api_key=${API_KEY}&language=en-US&query=${keyword}&page=1`).then(\r\n    (response) => response.json()\r\n  );\r\n}\r\n","const API_KEY = \"4bc5f53a3e7b9a35ef5fbd55f9f2b964\";\n\nexport function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n\nexport function makeCompanyImg(id: string) {\n  return `https://api.themoviedb.org/3/company/${id}/images?api_key=${API_KEY}`;\n}\n","import { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  getOntheair,\n  getPopularTv,\n  getTopratedTv,\n  IGetTvsResult,\n} from \"../api\";\nimport { makeImagePath } from \"../utils\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 120vh;\n  background-color: inherit;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\nconst BgInfo = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n`;\nconst BgInfo_title = styled.h1`\n  font-size: 50px;\n`;\nconst BgInfo_overview = styled.p`\n  font-size: 20px;\n  margin-top: 20px;\n  width: 50%;\n`;\nconst Rowname = styled.div`\n  padding-left: 20px;\n  position: relative;\n  top: -180px;\n  font-weight: 700;\n`;\nconst Slider = styled(motion.div)`\n  width: 100%;\n  position: relative;\n  bottom: 170px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 5px;\n  width: 100%;\n  padding-left: 20px;\n  position: absolute;\n`;\nconst Box = styled(motion.div)`\n  height: 200px;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n  img {\n    width: 100%;\n    height: 200px;\n  }\n`;\nconst Rowbox = styled(motion.div)`\n  width: 50px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  cursor: pointer;\n  position: absolute;\n  right: 0;\n  bottom: -200px;\n`;\nconst RowButton = styled(motion.svg)`\n  width: 20px;\n`;\nconst Info = styled(motion.div)`\n  padding: 15px;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  width: 100%;\n  position: relative;\n  bottom: 5px;\n  display: flex;\n  justify-content: center;\n  h4 {\n    text-align: center;\n    font-size: 13px;\n    width: 90%;\n  }\n  svg {\n    position: absolute;\n    left: 3px;\n    width: 20px;\n    cursor: pointer;\n  }\n`;\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n  position: relative;\n  .coverContent {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    position: absolute;\n    bottom: 0;\n  }\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  font-size: 46px;\n  font-weight: 700;\n`;\n\nconst BigOverview = styled.p`\n  padding: 0 20px;\n  margin: 20px 0;\n  margin-top: 40px;\n  position: relative;\n  color: ${(props) => props.theme.white.lighter};\n  p {\n    font-weight: 500;\n    font-size: 20px;\n    margin-bottom: 5px;\n    text-align: center;\n  }\n`;\n\nconst Biginfo = styled.div`\n  padding: 10px 10px;\n\n  p {\n    margin-bottom: 5px;\n  }\n`;\nconst Bigdate = styled.p``;\nconst Bigruntime = styled.p``;\nconst Bigvote = styled.p``;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 10,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 10,\n  },\n};\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -90,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\nconst offset = 5;\n\nfunction Tv() {\n  const { data: onairtv, isLoading: onairLoading } = useQuery<IGetTvsResult>(\n    [\"tv\", \"onAir\"],\n    getOntheair\n  );\n  console.log(onairtv);\n  const [index, setIndex] = useState(0);\n\n  const increaseIndex = () => {\n    if (onairtv) {\n      const totalMovies = onairtv?.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const [rowHovered, setrowHovered] = useState(false);\n\n  const toggleRowHover = () => {\n    setrowHovered((prev) => !prev);\n  };\n\n  const history = useHistory();\n  const ClickedMatch = useRouteMatch<{ TvId: string }>(\"/jwflix/tv/:TvId\");\n  const onBoxOpen = (TvId: number) => {\n    history.push(`/jwflix/tv/${TvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/jwflix/tv\");\n  const { scrollY } = useViewportScroll();\n  const clickedTv =\n    ClickedMatch?.params.TvId &&\n    onairtv?.results.find((Tv) => Tv.id === +ClickedMatch.params.TvId);\n  return (\n    <Wrapper>\n      {onairLoading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(onairtv?.results[0].backdrop_path || \"\")}\n          >\n            <BgInfo>\n              <BgInfo_title>{onairtv?.results[0].name}</BgInfo_title>\n              <BgInfo_overview>{onairtv?.results[0].overview}</BgInfo_overview>\n            </BgInfo>\n          </Banner>\n          <Rowname>On air TV shows</Rowname>\n          <Slider onHoverStart={toggleRowHover} onHoverEnd={toggleRowHover}>\n            <AnimatePresence initial={false}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {onairtv?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((onAir) => (\n                    <Box\n                      variants={boxVariants}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      transition={{ type: \"tween\" }}\n                      key={onAir.id}\n                    >\n                      {onAir.backdrop_path === null ? (\n                        <p\n                          style={{\n                            height: \"200px\",\n                            backgroundColor: \"black\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          Can't find image\n                        </p>\n                      ) : (\n                        <motion.img\n                          src={makeImagePath(onAir.backdrop_path, \"w500\")}\n                          style={{ objectFit: \"cover\" }}\n                        ></motion.img>\n                      )}\n\n                      <Info variants={infoVariants}>\n                        <h4>{onAir.name}</h4>\n                        <svg\n                          onClick={() => onBoxOpen(onAir.id)}\n                          aria-hidden=\"true\"\n                          focusable=\"false\"\n                          data-prefix=\"far\"\n                          data-icon=\"arrow-alt-circle-down\"\n                          role=\"img\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 512 512\"\n                        >\n                          <path\n                            fill=\"currentColor\"\n                            d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z\"\n                          ></path>\n                        </svg>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n            {rowHovered ? (\n              <Rowbox>\n                <RowButton\n                  onClick={increaseIndex}\n                  aria-hidden=\"true\"\n                  focusable=\"false\"\n                  data-prefix=\"fas\"\n                  data-icon=\"chevron-right\"\n                  role=\"img\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 320 512\"\n                  className=\"svg-inline--fa fa-chevron-right fa-w-10 fa-3x\"\n                >\n                  <path\n                    fill=\"white\"\n                    d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\n                  ></path>\n                </RowButton>\n              </Rowbox>\n            ) : null}\n          </Slider>\n          <AnimatePresence>\n            {ClickedMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                ></Overlay>\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  style={{\n                    top: scrollY.get() + 200,\n                    position: \"absolute\",\n                    width: \"500px\",\n                    backgroundColor: \"rgba(0,0,0,0.7)\",\n                    left: 0,\n                    right: 0,\n                    margin: \"0 auto\",\n                  }}\n                >\n                  {clickedTv ? (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedTv.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      >\n                        <div className=\"coverContent\">\n                          <BigTitle>{clickedTv.name}</BigTitle>\n                        </div>\n                      </BigCover>\n                      <BigOverview>\n                        <p>Overview</p> {clickedTv.overview}\n                      </BigOverview>\n                      <hr />\n                      <Biginfo>\n                        <>\n                          <Bigdate>인기도 : {clickedTv?.popularity}</Bigdate>\n\n                          <Bigruntime>\n                            첫 방영일 : {clickedTv?.first_air_date}\n                          </Bigruntime>\n                          <Bigvote>평점 : {clickedTv?.vote_average} 점</Bigvote>\n                        </>\n                      </Biginfo>\n                    </>\n                  ) : null}\n                </motion.div>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Tv;\n","import { useQuery } from \"react-query\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getMovies,\r\n  getPopularMovies,\r\n  getTheMovie,\r\n  getTopMovies,\r\n  IGetMoviesResult,\r\n} from \"../api\";\r\nimport { makeImagePath, makeCompanyImg } from \"../utils\";\r\nimport { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  height: 200vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Banner = styled.div<{ bgPhoto: string }>`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 60px;\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 50px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 20px;\r\n  width: 50%;\r\n  margin-top: 20px;\r\n`;\r\nconst Rowname = styled.h2`\r\n  position: relative;\r\n  left: 20px;\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n`;\r\nconst Slider = styled(motion.div)`\r\n  position: relative;\r\n  width: 100%;\r\n  bottom: 170px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  position: absolute;\r\n  gap: 5px;\r\n  width: 100%;\r\n  padding-left: 20px;\r\n`;\r\nconst Box = styled(motion.div)`\r\n  background-color: white;\r\n  height: 200px;\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: 200px;\r\n  }\r\n`;\r\n\r\nconst RowBox = styled(motion.div)`\r\n  position: absolute;\r\n  right: 0;\r\n  width: 50px;\r\n  height: 200px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst RowButton = styled(motion.svg)`\r\n  width: 20px;\r\n`;\r\nconst Info = styled(motion.div)`\r\n  padding: 15px;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  opacity: 0;\r\n  width: 100%;\r\n  position: relative;\r\n  bottom: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 13px;\r\n    width: 90%;\r\n  }\r\n  svg {\r\n    position: absolute;\r\n    left: 3px;\r\n    width: 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nconst BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 400px;\r\n  position: relative;\r\n  .coverContent {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n    position: absolute;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nconst BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  font-size: 46px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst BigOverview = styled.p`\r\n  padding: 0 20px;\r\n  margin: 20px 0;\r\n  margin-top: 40px;\r\n  position: relative;\r\n  color: ${(props) => props.theme.white.lighter};\r\n  p {\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    margin-bottom: 5px;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Bigrate = styled.div`\r\n  padding: 0 20px;\r\n  color: ${(props) => props.theme.white.lighter};\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: tomato;\r\n  border-radius: 50px;\r\n  font-weight: 800;\r\n`;\r\nconst Biginfo = styled.div`\r\n  padding: 10px 10px;\r\n\r\n  p {\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Bigdate = styled.p``;\r\nconst Bigruntime = styled.p``;\r\nconst Bigvote = styled.p``;\r\nconst Bigproductor = styled.div`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  div {\r\n    padding: 5px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    p {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n`;\r\nconst CompayLogo = styled.img`\r\n  border-radius: 50px;\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: white;\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: {\r\n    x: window.outerWidth + 10,\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: {\r\n    x: -window.outerWidth - 10,\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -90,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst offset = 5;\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n  const theMovieId = useParams<{ movieId: string }>();\r\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\r\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\r\n    [\"movies\", \"nowPlaying\"],\r\n    getMovies\r\n  );\r\n  const { data: popularMovie, isLoading: popularLoading } =\r\n    useQuery<IGetMoviesResult>([\"popularMovies\", \"Popular\"], getPopularMovies);\r\n  const { data: topMovie, isLoading: topLoading } = useQuery<IGetMoviesResult>(\r\n    [\"topMovies\", \"Top\"],\r\n    getTopMovies\r\n  );\r\n\r\n  const { scrollY } = useViewportScroll();\r\n  const [rowHovered, setrowHovered] = useState(false);\r\n  const [rowHovered2, setrowHovered2] = useState(false);\r\n  const [rowHovered3, setrowHovered3] = useState(false);\r\n  const toggleRowHover = () => {\r\n    setrowHovered((prev) => !prev);\r\n  };\r\n  const toggleRowHover2 = () => {\r\n    setrowHovered2((prev) => !prev);\r\n  };\r\n  const toggleRowHover3 = () => {\r\n    setrowHovered3((prev) => !prev);\r\n  };\r\n\r\n  const [index, setIndex] = useState(0);\r\n  const [index2, setIndex2] = useState(0);\r\n  const [index3, setIndex3] = useState(0);\r\n  const increaseIndex = () => {\r\n    if (data) {\r\n      const totalMovies = data?.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const increaseIndex2 = () => {\r\n    if (data) {\r\n      const totalMovies = data?.results.length;\r\n      const maxIndex = Math.floor(totalMovies / offset);\r\n      setIndex2((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const increaseIndex3 = () => {\r\n    if (data) {\r\n      const totalMovies = data?.results.length;\r\n      const maxIndex = Math.floor(totalMovies / offset);\r\n      setIndex3((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const onBoxOpen = (movieId: number) => {\r\n    history.push(`/movies/${movieId}`);\r\n  };\r\n  const clickedMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    data?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId);\r\n  const clickedMovie2 =\r\n    bigMovieMatch?.params.movieId &&\r\n    popularMovie?.results.find(\r\n      (movie) => movie.id === +bigMovieMatch.params.movieId\r\n    );\r\n  const clickedMovie3 =\r\n    bigMovieMatch?.params.movieId &&\r\n    topMovie?.results.find(\r\n      (movie) => movie.id === +bigMovieMatch.params.movieId\r\n    );\r\n  //bigmoviematch가 true라면 data.result를 탐색\r\n  const { data: movieDetail, isLoading: movieLoading } = useQuery(\r\n    [\"clickedMovie\", theMovieId.movieId],\r\n    () => getTheMovie(theMovieId.movieId)\r\n  );\r\n\r\n  const onOverlayClick = () => history.push(\"/jwflix\");\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Banner bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\r\n            <Title>{data?.results[0].title}</Title>\r\n            <Overview>{data?.results[0].overview}</Overview>\r\n          </Banner>\r\n          {/*------------row1-------------*/}\r\n          <Rowname style={{ top: \"-180px\" }}>Now Playing</Rowname>\r\n          <Slider onHoverStart={toggleRowHover} onHoverEnd={toggleRowHover}>\r\n            <AnimatePresence initial={false}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={index}\r\n              >\r\n                {data?.results\r\n                  .slice(1)\r\n                  .slice(offset * index, offset * index + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      key={movie.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      transition={{ type: \"tween\" }}\r\n                    >\r\n                      <motion.img\r\n                        src={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                        style={{ objectFit: \"cover\" }}\r\n                      ></motion.img>\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                        <svg\r\n                          onClick={() => onBoxOpen(movie.id)}\r\n                          aria-hidden=\"true\"\r\n                          focusable=\"false\"\r\n                          data-prefix=\"far\"\r\n                          data-icon=\"arrow-alt-circle-down\"\r\n                          role=\"img\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          viewBox=\"0 0 512 512\"\r\n                        >\r\n                          <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z\"\r\n                          ></path>\r\n                        </svg>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            {rowHovered === true ? (\r\n              <RowBox>\r\n                <RowButton\r\n                  onClick={increaseIndex}\r\n                  layoutId=\"rowbtn\"\r\n                  aria-hidden=\"true\"\r\n                  focusable=\"false\"\r\n                  data-prefix=\"fas\"\r\n                  data-icon=\"chevron-right\"\r\n                  role=\"img\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 320 512\"\r\n                  className=\"svg-inline--fa fa-chevron-right fa-w-10 fa-3x\"\r\n                >\r\n                  <path\r\n                    fill=\"white\"\r\n                    d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n                  ></path>\r\n                </RowButton>\r\n              </RowBox>\r\n            ) : null}\r\n          </Slider>\r\n          <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                ></Overlay>\r\n                <motion.div\r\n                  initial={{ opacity: 0 }}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  style={{\r\n                    top: scrollY.get() + 200,\r\n                    position: \"absolute\",\r\n                    width: \"500px\",\r\n                    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: \"0 auto\",\r\n                  }}\r\n                >\r\n                  {clickedMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedMovie.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      >\r\n                        <div className=\"coverContent\">\r\n                          <BigTitle>{clickedMovie.title}</BigTitle>\r\n                          <Bigrate>\r\n                            {movieDetail?.adult ? (\r\n                              <span>19</span>\r\n                            ) : (\r\n                              <span>15</span>\r\n                            )}\r\n                          </Bigrate>\r\n                        </div>\r\n                      </BigCover>\r\n                      <BigOverview>\r\n                        <p>Overview</p> {clickedMovie.overview}\r\n                      </BigOverview>\r\n                      <hr />\r\n                      <Biginfo>\r\n                        <>\r\n                          <Bigdate>\r\n                            개봉일자 : {movieDetail?.release_date}\r\n                          </Bigdate>\r\n\r\n                          <Bigruntime>\r\n                            러닝타임 : {movieDetail?.runtime} 분\r\n                          </Bigruntime>\r\n                          <Bigvote>\r\n                            평점 : {movieDetail?.vote_average} 점\r\n                          </Bigvote>\r\n                          <Bigproductor>\r\n                            제작사 :\r\n                            {movieDetail?.production_companies.map(\r\n                              (company: any) => (\r\n                                <div>\r\n                                  <p>◾ {company?.name}</p>\r\n                                  {company.logo_path ? (\r\n                                    <CompayLogo\r\n                                      src={makeImagePath(company?.logo_path)}\r\n                                    />\r\n                                  ) : null}\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </Bigproductor>\r\n                        </>\r\n                      </Biginfo>\r\n                    </>\r\n                  )}\r\n                </motion.div>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n          {/*------------row2-------------*/}\r\n          <Rowname style={{ top: \"100px\" }}>Popular Movie</Rowname>\r\n          <Slider\r\n            style={{ top: \"110px\" }}\r\n            onHoverStart={toggleRowHover2}\r\n            onHoverEnd={toggleRowHover2}\r\n          >\r\n            <AnimatePresence initial={false}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={index2}\r\n              >\r\n                {popularMovie?.results\r\n                  .slice(offset * index2, offset * index2 + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      key={movie.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      transition={{ type: \"tween\" }}\r\n                    >\r\n                      <motion.img\r\n                        src={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                        style={{ objectFit: \"cover\" }}\r\n                      ></motion.img>\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                        <svg\r\n                          onClick={() => onBoxOpen(movie.id)}\r\n                          aria-hidden=\"true\"\r\n                          focusable=\"false\"\r\n                          data-prefix=\"far\"\r\n                          data-icon=\"arrow-alt-circle-down\"\r\n                          role=\"img\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          viewBox=\"0 0 512 512\"\r\n                        >\r\n                          <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z\"\r\n                          ></path>\r\n                        </svg>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            {rowHovered2 === true ? (\r\n              <RowBox>\r\n                <RowButton\r\n                  onClick={increaseIndex2}\r\n                  layoutId=\"rowbtn\"\r\n                  aria-hidden=\"true\"\r\n                  focusable=\"false\"\r\n                  data-prefix=\"fas\"\r\n                  data-icon=\"chevron-right\"\r\n                  role=\"img\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 320 512\"\r\n                  className=\"svg-inline--fa fa-chevron-right fa-w-10 fa-3x\"\r\n                >\r\n                  <path\r\n                    fill=\"white\"\r\n                    d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n                  ></path>\r\n                </RowButton>\r\n              </RowBox>\r\n            ) : null}\r\n          </Slider>\r\n          <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                ></Overlay>\r\n                <motion.div\r\n                  initial={{ opacity: 0 }}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  style={{\r\n                    zIndex: 1,\r\n                    top: scrollY.get() + 100,\r\n                    position: \"absolute\",\r\n                    width: \"500px\",\r\n                    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: \"0 auto\",\r\n                  }}\r\n                >\r\n                  {clickedMovie2 && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedMovie2.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      >\r\n                        <div className=\"coverContent\">\r\n                          <BigTitle>{clickedMovie2.title}</BigTitle>\r\n                          <Bigrate>\r\n                            {movieDetail?.adult ? (\r\n                              <span>19</span>\r\n                            ) : (\r\n                              <span>15</span>\r\n                            )}\r\n                          </Bigrate>\r\n                        </div>\r\n                      </BigCover>\r\n                      <BigOverview>\r\n                        <p>Overview</p> {clickedMovie2.overview}\r\n                      </BigOverview>\r\n                      <hr />\r\n                      <Biginfo>\r\n                        <>\r\n                          <Bigdate>\r\n                            개봉일자 : {movieDetail?.release_date}\r\n                          </Bigdate>\r\n\r\n                          <Bigruntime>\r\n                            러닝타임 : {movieDetail?.runtime} 분\r\n                          </Bigruntime>\r\n                          <Bigvote>\r\n                            평점 : {movieDetail?.vote_average} 점\r\n                          </Bigvote>\r\n                          <Bigproductor>\r\n                            제작사 :\r\n                            {movieDetail?.production_companies.map(\r\n                              (company: any) => (\r\n                                <div>\r\n                                  <p>◾ {company?.name}</p>\r\n                                  {company.logo_path ? (\r\n                                    <CompayLogo\r\n                                      src={makeImagePath(company?.logo_path)}\r\n                                    />\r\n                                  ) : null}\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </Bigproductor>\r\n                        </>\r\n                      </Biginfo>\r\n                    </>\r\n                  )}\r\n                </motion.div>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n          {/*------------row3-------------*/}\r\n          <Rowname style={{ top: \"380px\" }}>Top Rated Movie</Rowname>\r\n          <Slider\r\n            style={{ top: \"390px\" }}\r\n            onHoverStart={toggleRowHover3}\r\n            onHoverEnd={toggleRowHover3}\r\n          >\r\n            <AnimatePresence initial={false}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={index3}\r\n              >\r\n                {topMovie?.results\r\n                  .slice(offset * index3, offset * index3 + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      key={movie.id}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      variants={boxVariants}\r\n                      transition={{ type: \"tween\" }}\r\n                    >\r\n                      <motion.img\r\n                        src={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                        style={{ objectFit: \"cover\" }}\r\n                      ></motion.img>\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                        <svg\r\n                          onClick={() => onBoxOpen(movie.id)}\r\n                          aria-hidden=\"true\"\r\n                          focusable=\"false\"\r\n                          data-prefix=\"far\"\r\n                          data-icon=\"arrow-alt-circle-down\"\r\n                          role=\"img\"\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          viewBox=\"0 0 512 512\"\r\n                        >\r\n                          <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z\"\r\n                          ></path>\r\n                        </svg>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n            {rowHovered3 === true ? (\r\n              <RowBox>\r\n                <RowButton\r\n                  onClick={increaseIndex3}\r\n                  layoutId=\"rowbtn\"\r\n                  aria-hidden=\"true\"\r\n                  focusable=\"false\"\r\n                  data-prefix=\"fas\"\r\n                  data-icon=\"chevron-right\"\r\n                  role=\"img\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 320 512\"\r\n                  className=\"svg-inline--fa fa-chevron-right fa-w-10 fa-3x\"\r\n                >\r\n                  <path\r\n                    fill=\"white\"\r\n                    d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522-.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373 33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\r\n                  ></path>\r\n                </RowButton>\r\n              </RowBox>\r\n            ) : null}\r\n          </Slider>\r\n          <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                ></Overlay>\r\n                <motion.div\r\n                  initial={{ opacity: 0 }}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  style={{\r\n                    top: scrollY.get() + 200,\r\n                    position: \"absolute\",\r\n                    width: \"500px\",\r\n                    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: \"0 auto\",\r\n                  }}\r\n                >\r\n                  {clickedMovie3 && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedMovie3.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      >\r\n                        <div className=\"coverContent\">\r\n                          <BigTitle>{clickedMovie3.title}</BigTitle>\r\n                          <Bigrate>\r\n                            {movieDetail?.adult ? (\r\n                              <span>19</span>\r\n                            ) : (\r\n                              <span>15</span>\r\n                            )}\r\n                          </Bigrate>\r\n                        </div>\r\n                      </BigCover>\r\n                      <BigOverview>\r\n                        <p>Overview</p> {clickedMovie3.overview}\r\n                      </BigOverview>\r\n                      <hr />\r\n                      <Biginfo>\r\n                        <>\r\n                          <Bigdate>\r\n                            개봉일자 : {movieDetail?.release_date}\r\n                          </Bigdate>\r\n\r\n                          <Bigruntime>\r\n                            러닝타임 : {movieDetail?.runtime} 분\r\n                          </Bigruntime>\r\n                          <Bigvote>\r\n                            평점 : {movieDetail?.vote_average} 점\r\n                          </Bigvote>\r\n                          <Bigproductor>\r\n                            제작사 :\r\n                            {movieDetail?.production_companies.map(\r\n                              (company: any) => (\r\n                                <div>\r\n                                  <p>◾ {company?.name}</p>\r\n                                  {company.logo_path ? (\r\n                                    <CompayLogo\r\n                                      src={makeImagePath(company?.logo_path)}\r\n                                    />\r\n                                  ) : null}\r\n                                </div>\r\n                              )\r\n                            )}\r\n                          </Bigproductor>\r\n                        </>\r\n                      </Biginfo>\r\n                    </>\r\n                  )}\r\n                </motion.div>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Home;\r\n","import { motion } from \"framer-motion\";\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  getSearchMovie,\n  getSearchTv,\n  IGetMoviesResult,\n  IGetTvsResult,\n} from \"../api\";\nimport { makeImagePath } from \"../utils\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin-top: 30px;\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n`;\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  height: 350px;\n  align-items: center;\n`;\nconst Title = styled.p`\n  font-size: 30px;\n  font-weight: 600;\n  margin-top: 100px;\n`;\nconst Searchname = styled.p`\n  font-size: 20px;\n  width: 100%;\n  text-align: center;\n  margin-top: 200px;\n`;\n\nfunction Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\") as string;\n  const { data: movie, isLoading } = useQuery<IGetMoviesResult>(\n    [\"searchs\", \"searchMovie\"],\n    () => getSearchMovie(keyword)\n  );\n  const { data: tv } = useQuery<IGetTvsResult>([\"searchs\", \"searchMovie\"], () =>\n    getSearchTv(keyword)\n  );\n  console.log(movie);\n  console.log(tv);\n  return (\n    <>\n      <Searchname>\"{keyword}\" 검색결과 </Searchname>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <>\n          <Title>Movies</Title>\n          <hr style={{ width: \"100%\" }} />\n          <Wrapper>\n            {isLoading ? (\n              <h1>Loading....</h1>\n            ) : (\n              <>\n                {movie?.results.map((search) => (\n                  <Box>\n                    <motion.img\n                      src={makeImagePath(search.poster_path, \"w200\")}\n                      style={{\n                        objectFit: \"cover\",\n                        width: \"200px\",\n                        height: \"300px\",\n                        marginBottom: \"7px\",\n                      }}\n                    ></motion.img>\n                    <h2>{search.original_title}</h2>\n                  </Box>\n                ))}\n              </>\n            )}\n          </Wrapper>\n          <Title>Tv shows</Title>\n          <hr style={{ width: \"100%\" }} />\n          <Wrapper>\n            <>\n              {tv?.results.map((tvshows) => (\n                <Box>\n                  <motion.img\n                    src={makeImagePath(tvshows.poster_path, \"w200\")}\n                    style={{\n                      objectFit: \"cover\",\n                      width: \"200px\",\n                      height: \"300px\",\n                      marginBottom: \"7px\",\n                    }}\n                  ></motion.img>\n                  <h2>{tvshows.name}</h2>\n                </Box>\n              ))}\n            </>\n          </Wrapper>\n        </>\n      </div>\n    </>\n  );\n}\n\nexport default Search;\n","import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  animate,\r\n  motion,\r\n  useAnimation,\r\n  useViewportScroll,\r\n} from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Nav = styled(motion.nav)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  background-color: black;\r\n  font-size: 14px;\r\n  padding: 20px 60px;\r\n  color: white;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled(motion.svg)`\r\n  margin-right: 50px;\r\n  width: 95px;\r\n  height: 25px;\r\n  fill: #d81f26;\r\n\r\n  path {\r\n    stroke-width: 4px;\r\n    stroke: white;\r\n  }\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  margin-right: 20px;\r\n  color: ${(props) => props.theme.white.darker};\r\n  transition: color 0.3s ease-in-out;\r\n  position: relative;\r\n  &:hover {\r\n    color: ${(props) => props.theme.white.lighter};\r\n  }\r\n`;\r\n\r\nconst Search = styled.form`\r\n  position: relative;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  svg {\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst Input = styled(motion.input)`\r\n  position: absolute;\r\n  left: -180px;\r\n  transform-origin: right;\r\n  padding: 5px 10px;\r\n  padding-left: 40px;\r\n  z-index: -1;\r\n  background-color: transparent;\r\n  color: white;\r\n  font-weight: 700;\r\n  border: 1px solid ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst Circle = styled(motion.div)`\r\n  height: 5px;\r\n  width: 5px;\r\n  border-radius: 5px;\r\n  background-color: #d81f26;\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  bottom: -10px;\r\n`;\r\n\r\nconst svg = {\r\n  start: { pathLength: 0, fill: \"rgba(0,0,0,0)\" },\r\n  end: {\r\n    pathLength: 1,\r\n    fill: \"#d81f26\",\r\n  },\r\n  hover: {\r\n    stroke: \"10px\",\r\n  },\r\n};\r\n\r\nconst navVariants = {\r\n  top: {\r\n    backgroundColor: \"rgba(0,0,0,0)\",\r\n  },\r\n  scroll: {\r\n    backgroundColor: \"black\",\r\n  },\r\n};\r\n\r\ninterface IForm {\r\n  keyword: string;\r\n}\r\n\r\nfunction Header() {\r\n  const homeMatch = useRouteMatch(\"/jwflix\");\r\n  const tvMatch = useRouteMatch(\"/jwflix/tv\");\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const toggleSearch = () => setSearchOpen((prev) => !prev);\r\n\r\n  const navAnimation = useAnimation();\r\n  const { scrollY } = useViewportScroll();\r\n  useEffect(() => {\r\n    scrollY.onChange(() => {\r\n      if (scrollY.get() > 95) {\r\n        navAnimation.start(\"scroll\");\r\n      } else {\r\n        navAnimation.start(\"top\");\r\n      }\r\n    });\r\n  });\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm<IForm>();\r\n  const onValid = (data: IForm) => {\r\n    history.push(`/search?keyword=${data.keyword}`);\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\r\n      <Col>\r\n        <Link to=\"/jwflix\">\r\n          <Logo\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"1024\"\r\n            height=\"276.742\"\r\n            viewBox=\"0 0 1024 276.742\"\r\n            whileHover={{ fillOpacity: 0.8 }}\r\n            animate={{ fillOpacity: 1 }}\r\n          >\r\n            <motion.path\r\n              initial=\"start\"\r\n              animate=\"end\"\r\n              transition={{ duration: 3 }}\r\n              variants={svg}\r\n              d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\"\r\n            />\r\n          </Logo>\r\n        </Link>\r\n        <Items>\r\n          <Item>\r\n            <Link to=\"/jwflix\">\r\n              Home\r\n              {homeMatch?.isExact === true ? (\r\n                <Circle layoutId=\"circle\" />\r\n              ) : null}\r\n            </Link>\r\n          </Item>\r\n          <Item>\r\n            <Link to=\"/jwflix/tv\">\r\n              Tv Shows\r\n              {tvMatch?.isExact === true ? <Circle layoutId=\"circle\" /> : null}\r\n            </Link>\r\n          </Item>\r\n        </Items>\r\n      </Col>\r\n      <Col>\r\n        <Search onSubmit={handleSubmit(onValid)}>\r\n          <motion.svg\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={toggleSearch}\r\n            animate={{ x: searchOpen ? -180 : 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </motion.svg>\r\n          <Input\r\n            {...register(\"keyword\", { required: true, minLength: 2 })}\r\n            placeholder=\"Search here!\"\r\n            initial={{ scaleX: 0 }}\r\n            animate={{ scaleX: searchOpen ? 1 : 0 }}\r\n            transition={{ type: \"linear\" }}\r\n          />\r\n        </Search>\r\n      </Col>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Tv from \"./Routes/Tv\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Header from \"./Components/Header\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path={[\"/jwflix/tv\", \"/jwflix/tv/:movieId\"]}>\n          <Tv />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path={[\"/jwflix\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n  background-color : black;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  \n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}